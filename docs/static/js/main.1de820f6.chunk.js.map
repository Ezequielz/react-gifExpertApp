{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inpuntValue","setinpuntValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGNC,mBAAS,IAHH,mBAGrCC,EAHqC,KAGxBC,EAHwB,KAqB5C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAYK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAe,MAOnB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SApBe,SAACP,GACxBF,EAAgBE,EAAEQ,OAAOF,a,+BCVhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAQF,EAAIE,MACZV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAgBZM,GAhBY,4CAAH,sDCCXO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIlC,OACI,sBAAKc,UAAU,8CAAf,UACG,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCLHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA6BxC,OAtBAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHC,YAAY,WAERJ,EAAS,CACLf,KAAMkB,EACNL,SAAQ,MAGb,UAMZ,CAACpB,IAIGqB,ED1B2BM,CAAc3B,GAAnCa,EAHwB,EAG7BN,KAAca,EAHe,EAGfA,QAUtB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAoDhB,EAApD,OAEGoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEd,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEKA,GADCA,EAAIC,aExBrBiB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,gBAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAEA,6BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OAClB,cAAC,EAAD,CAEGA,SAAWA,GADLA,Y,MCblC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1de820f6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n\r\n    const [inpuntValue, setinpuntValue] = useState(\"\");\r\n\r\n\r\n    const handleInpuntChange = (e) =>{\r\n        setinpuntValue( e.target.value)\r\n    } \r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if( inpuntValue.trim().length > 2){\r\n            setCategories( cats => [inpuntValue,...cats])\r\n            setinpuntValue(\"\")\r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value = {inpuntValue}\r\n                onChange={ handleInpuntChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n    export const getGifs = async( category ) => {\r\n    \r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=dbvjhCzvcX7SHRlS0mVE4QiiVcbOZklg`\r\n        const resp = await fetch( url );\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map( img => {\r\n\r\n            return {\r\n                id: img.id,\r\n                title : img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n\r\n        })\r\n\r\n        return gifs;\r\n        \r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInRight\">\r\n           <img src={ url } alt={ title }/>\r\n           <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n   \r\n    const { data:images , loading } = useFetchGifs( category )\r\n\r\n\r\n    \r\n    //useEffect( () => {\r\n    //    getGifs( category )\r\n    //        .then( setImages )\r\n    //}, [ category ]) \r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n\r\n             { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                    {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        key={ img.id }\r\n                        { ...img }\r\n                        />\r\n                    ))\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setTimeout( () =>{\r\n                    \r\n                    setState({\r\n                        data: imgs,\r\n                        loading:false\r\n                    }); \r\n\r\n                }, 1000)\r\n               \r\n\r\n\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([\"Dragon ball\"])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category =>(\r\n                         <GifGrid \r\n                            key={ category }\r\n                            category={ category }\r\n                         />\r\n                         ))\r\n                }\r\n\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}